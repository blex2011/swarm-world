# =============================================================================
# CLAUDE FLOW SWARM PROJECT .GITIGNORE
# =============================================================================
# This .gitignore is specifically designed for a Claude Flow swarm coordination
# system with AI/ML components, cross-platform support, and Unity integration
# Generated by Claude Flow Swarm Analysis v2.0.0

# =============================================================================
# üö® CRITICAL: SWARM COORDINATION FILES
# =============================================================================
# SQLite databases with swarm memory and coordination data
.swarm/
*.db
*.db-shm
*.db-wal
*.sqlite
*.sqlite3

# Swarm runtime logs and temporary coordination data
logs/
*.log
swarm-*.log
coordination-*.log

# Agent memory and session persistence (runtime data only)
memory/claude-flow-data.json
memory/sessions/active/
memory/agents/temp/

# =============================================================================
# üîí SECURITY & ENVIRONMENT
# =============================================================================
# Environment variables and secrets
.env
.env.*
.env.local
.env.development.local
.env.test.local
.env.production.local

# Security credentials and certificates
*.key
*.pem
*.crt
*.cer
*.p12
*.pfx
*.jks
id_rsa
id_rsa.pub
*.ppk

# API keys and tokens (if stored in files)
api-keys/
tokens/
credentials/
secrets/

# =============================================================================
# üêç PYTHON SPECIFIC
# =============================================================================
# Compiled Python files
__pycache__/
*.py[cod]
*$py.class
*.so

# Python virtual environments
venv/
.venv/
env/
.env/
ENV/
env.bak/
venv.bak/

# Python testing and coverage
.pytest_cache/
.coverage
.coverage.*
htmlcov/
.tox/
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Python distribution and packaging
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Jupyter Notebook checkpoints
.ipynb_checkpoints

# =============================================================================
# üü¢ NODE.JS SPECIFIC
# =============================================================================
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# NPM package locks (project uses dynamic imports)
package-lock.json
yarn.lock

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
.nyc_output

# Grunt intermediate storage
.grunt

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# =============================================================================
# üß† AI/ML & NEURAL LEARNING
# =============================================================================
# Machine learning models and checkpoints
*.h5
*.hdf5
*.pkl
*.pickle
*.pth
*.pt
*.ckpt
*.model
models/
checkpoints/
trained_models/

# Neural pattern learning cache
neural_patterns/
pattern_cache/
learning_cache/

# TensorBoard logs
tensorboard_logs/
runs/

# ML framework specific
.wandb/
mlruns/

# =============================================================================
# üéÆ UNITY SPECIFIC
# =============================================================================
# Unity generated files
[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
[Ll]ogs/
[Uu]ser[Ss]ettings/

# MemoryCaptures can get excessive in size
[Mm]emoryCaptures/

# Asset meta files should only be ignored when the corresponding asset is also ignored
![Aa]ssets/**/*.meta

# Uncomment this line if you wish to ignore the asset store tools plugin
# [Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache/options directory
.vs/
.vscode/

# =============================================================================
# üíª OPERATING SYSTEM
# =============================================================================
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# üõ†Ô∏è IDE & EDITOR
# =============================================================================
# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================================================
# üì¶ BUILD & DISTRIBUTION
# =============================================================================
# Build outputs
build/
dist/
out/
target/

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.old
*.orig
*.rej

# Compressed files
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# =============================================================================
# üîß CONFIGURATION & CACHE
# =============================================================================
# Cache directories
.cache/
cache/
.sass-cache/

# Optional configuration files (keep templates)
config/local.*
config/development.*
config/production.*
!config/*.template.*
!config/*.example.*

# =============================================================================
# üìä MONITORING & ANALYTICS
# =============================================================================
# Performance monitoring data
performance_logs/
metrics/
analytics/

# Error tracking
error_logs/
crash_reports/

# =============================================================================
# üß™ TESTING
# =============================================================================
# Test results
test-results/
test_output/
test_reports/

# Coverage reports
coverage/
.nyc_output/

# =============================================================================
# üìù DOCUMENTATION BUILDS
# =============================================================================
# Sphinx documentation builds
docs/_build/
docs/build/

# =============================================================================
# CUSTOM PROJECT PATTERNS
# =============================================================================
# Add any project-specific patterns below this line
